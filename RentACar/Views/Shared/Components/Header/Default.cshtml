@model RentACar.Areas.Admin.Models.HeaderInfoViewModel

<header class="transparent scroll-light has-topbar">
    <!-- Topbar -->
    <div id="topbar" class="topbar-dark text-light">
        <div class="container d-flex justify-content-between align-items-center">
            <div class="topbar-left xs-hide d-flex">
                <div class="topbar-widget me-3">
                    <a href="tel:@Model.Phone"><i class="fa fa-phone"></i> @Model.Phone</a>
                </div>
                <div class="topbar-widget me-3">
                    <a href="mailto:@Model.Email"><i class="fa fa-envelope"></i> @Model.Email</a>
                </div>
                <div class="topbar-widget">
                    <i class="fa fa-clock-o"></i> @Model.WorkingTime.ToString("HH:mm")
                </div>
            </div>
            <div class="topbar-right">
                <div class="social-icons">
                    <a href="/Car/Favorites" title="Seçilmişlər" style="margin-left:10px; color:red;">
                        <i class="fa fa-heart fa-lg"></i>
                    </a>

                    @if (!string.IsNullOrWhiteSpace(Model.FacebookUrl))
                    {
                        <a href="@Model.FacebookUrl" target="_blank"><i class="fa fa-facebook fa-lg"></i></a>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.TwitterUrl))
                    {
                        <a href="@Model.TwitterUrl" target="_blank"><i class="fa fa-twitter fa-lg"></i></a>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.YoutubeUrl))
                    {
                        <a href="@Model.YoutubeUrl" target="_blank"><i class="fa fa-youtube fa-lg"></i></a>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.PinterestUrl))
                    {
                        <a href="@Model.PinterestUrl" target="_blank"><i class="fa fa-pinterest fa-lg"></i></a>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.InstagramUrl))
                    {
                        <a href="@Model.InstagramUrl" target="_blank"><i class="fa fa-instagram fa-lg"></i></a>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Main Navbar -->
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="de-flex sm-pt10">
                    <!-- Logo -->
                    <div class="de-flex-col">
                        <div id="logo">
                            <a asp-controller="home" asp-action="index">
                                <img class="logo-1" src="~/images/logo-light.png" alt="">
                                <img class="logo-2" src="~/images/logo.png" alt="">
                            </a>
                        </div>
                    </div>
                    <!-- Menu -->
                    <div class="de-flex-col header-col-mid">
                        <ul id="mainmenu" style="position:relative;">
                            <li><a class="menu-item" asp-controller="home" asp-action="index">Ana səhifə</a></li>
                            <li><a class="menu-item" asp-controller="Account" asp-action="Dashboard">Profil</a></li>
                            <li><a class="menu-item" asp-controller="car" asp-action="index">Avtomobillər</a></li>
                            <li><a class="menu-item" asp-controller="Booking" asp-action="QuickBooking">Sifariş et</a></li>
                             <li><a class="menu-item" asp-controller="About" asp-action="Index">Haqqımızda</a></li>
                                                    
                        </ul>
                    </div>

                    <!-- Right Side -->
                    <div class="de-flex-col">
                        <div class="menu_side_area">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-main border-0 bg-transparent text-white" style="background:green">
                                        Log out
                                    </button>
                                </form>
                            }
                            else
                            {
                                <a asp-controller="account" asp-action="login" class="btn-main">Sign in</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<!-- Seçilmişlər CSS -->
<style>
    #favorites-menu-list li {
        padding: 6px 8px;
        border-bottom: 1px solid #ddd;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        #favorites-menu-list li:hover {
            background-color: lightgreen;
        }

        #favorites-menu-list li img {
            width: 40px;
            height: 25px;
            object-fit: cover;
            border-radius: 3px;
            margin-right: 8px;
        }

        #favorites-menu-list li:last-child {
            border-bottom: none;
        }

    .remove-favorite {
        cursor: pointer;
        color: red;
        font-weight: bold;
        font-size: 16px;
    }

        .remove-favorite:hover {
            color: darkred;
        }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const favoritesKey = "favoriteCars";
        let favorites = JSON.parse(localStorage.getItem(favoritesKey)) || [];

        const favoritesMenu = document.getElementById("favorites-menu-list");
        const favoritesToggle = document.getElementById("favorites-toggle");

        function renderFavoritesDropdown() {
            favoritesMenu.innerHTML = "";
            if (favorites.length === 0) {
                favoritesMenu.innerHTML = "<li>Seçilmiş yoxdur</li>";
                return;
            }

            favorites.forEach(car => {
                favoritesMenu.insertAdjacentHTML("beforeend", `
    <li>
        <a href="/Car/Details/${car.id}" style="display:flex;align-items:center;gap:5px;text-decoration:none;color:inherit;">
            <img src="/images/car/${car.image}" alt="${car.name}" style="width:50px;height:30px;object-fit:cover;" />
            <span>${car.name}</span>
        </a>
        <span class="remove-favorite" data-id="${car.id}">×</span>
    </li>
                `);
            });

            favoritesMenu.querySelectorAll(".remove-favorite").forEach(btn => {
                btn.addEventListener("click", function () {
                    const id = parseInt(btn.getAttribute("data-id"));
                    favorites = favorites.filter(f => f.id !== id);
                    localStorage.setItem(favoritesKey, JSON.stringify(favorites));
                    renderFavoritesDropdown();
                    updateHeartIcons();
                });
            });
        }

        favoritesToggle.addEventListener("click", function (e) {
            e.preventDefault();
            favoritesMenu.style.display = (favoritesMenu.style.display === "block") ? "none" : "block";
        });

        document.addEventListener("click", function (e) {
            if (!favoritesMenu.contains(e.target) && !favoritesToggle.contains(e.target)) {
                favoritesMenu.style.display = "none";
            }
        });

        // Toggle favorite on Car page
        document.body.addEventListener("click", function (e) {
            if (e.target.classList.contains("favorite-icon")) {
                const icon = e.target;
                const card = icon.closest(".car-card");
                const carId = parseInt(icon.dataset.id);
                const name = card.dataset.carName;
                const image = card.dataset.carImage;

                const existing = favorites.find(f => f.id === carId);
                if (existing) {
                    favorites = favorites.filter(f => f.id !== carId);
                    icon.classList.remove("active");
                } else {
                    favorites.push({ id: carId, name, image });
                    icon.classList.add("active");
                }
                localStorage.setItem(favoritesKey, JSON.stringify(favorites));
                renderFavoritesDropdown();
            }
        });

        function updateHeartIcons() {
            document.querySelectorAll(".favorite-icon").forEach(icon => {
                const carId = parseInt(icon.dataset.id);
                if (favorites.some(f => f.id === carId)) icon.classList.add("active");
                else icon.classList.remove("active");
            });
        }

        renderFavoritesDropdown();
        updateHeartIcons();
    });
</script>